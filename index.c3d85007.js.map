{"mappings":"AA+CA,IAAMA,cAAgBC,SAASC,eAAe,iBAG1CC,eAAiB,EAGpB,SAAQC,eAAeC,GAEnBF,gBAAiB,EAGhBH,cAAYM,MAAMC,UAAY,cAA6BC,OAAfL,eAAe,OAGzDA,iBAAmBH,cAAcS,cACjCN,eAAiB,GAIlBO,sBAAmBN,e,CAI1BA","sources":["src/js/carousel.js"],"sourcesContent":["// document.addEventListener('DOMContentLoaded', function() {\n//     const slider = document.querySelector('.slider');\n//     const slideContainer = document.querySelector('.slide-container');\n//     const slides = document.querySelectorAll('.slide');\n//     const prevBtn = document.querySelector('.prev');\n//     const nextBtn = document.querySelector('.next');\n  \n//     let currentIndex = 0;\n//     const slideWidth = slides[0].offsetWidth;\n  \n//     // Ustawienie szerokości kontenera na podstawie liczby slajdów\n//     slideContainer.style.width = `${slides.length * slideWidth}px`;\n  \n//     // Funkcja przewijania slajdów\n//     function slide(direction) {\n//       if (direction === 'prev') {\n//         currentIndex = (currentIndex === 0) ? slides.length - 1 : currentIndex - 1;\n//       } else {\n//         currentIndex = (currentIndex === slides.length - 1) ? 0 : currentIndex + 1;\n//       }\n  \n//       // Dodanie klasy active do aktualnego slajdu i usunięcie jej z pozostałych slajdów\n//       slides.forEach((slide, index) => {\n//         if (index === currentIndex) {\n//           slide.classList.add('active');\n//         } else {\n//           slide.classList.remove('active');\n//         }\n//       });\n//     }\n  \n//     // Uruchomienie automatycznego przewijania co 3 sekundy\n//     const intervalId = setInterval(() => slide('next'), 3000);\n  \n//     // Obsługa przycisków\n//     prevBtn.addEventListener('click', () => {\n//       clearInterval(intervalId);\n//       slide('prev');\n//     });\n  \n//     nextBtn.addEventListener('click', () => {\n//       clearInterval(intervalId);\n//       slide('next');\n//     });\n//   });\n  \n// Pobieramy element message-slider\nconst messageSlider = document.getElementById('messageSlider');\n\n// Zmienna przechowująca aktualną pozycję przewijania\nlet scrollPosition = 0;\n\n// Funkcja przewijania wiadomości\nfunction scrollMessages(timestamp) {\n    // Aktualizujemy pozycję przewijania\n    scrollPosition -= 1; // Możesz dostosować szybkość przewijania zmieniając wartość\n\n    // Przewijamy wiadomość na podstawie aktualnej pozycji\n    messageSlider.style.transform = `translateX(${scrollPosition}px)`;\n\n    // Jeśli przewinęliśmy całą szerokość wiadomości, resetujemy pozycję przewijania\n    if (scrollPosition <= -messageSlider.offsetWidth) {\n        scrollPosition = 0;\n    }\n\n    // Ponownie wywołujemy funkcję scrollMessages przy użyciu requestAnimationFrame\n    requestAnimationFrame(scrollMessages);\n}\n\n// Wywołujemy funkcję scrollMessages, aby rozpocząć płynne przewijanie wiadomości\nscrollMessages();\n"],"names":["messageSlider","document","getElementById","scrollPosition","scrollMessages","timestamp","style","transform","concat","offsetWidth","requestAnimationFrame"],"version":3,"file":"index.c3d85007.js.map"}